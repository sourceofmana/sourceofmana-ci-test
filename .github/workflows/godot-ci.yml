name: "godot-ci export"
on:
  push:
    branches:
    - master

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: "Source of Mana"
  PROJECT_PATH: "."


jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      timestamp: ${{ steps.get-timestamp.outputs.time }}
    steps:
      - name: Get build timestamp
        id: get-timestamp
        run: |
          echo "time=$(/bin/date -u "+%Y-%m-%d-%H%M")" >> $GITHUB_OUTPUT
      - name: Get env vars
        id: generate_env_vars
        run: |
          echo "tag_name=som-experimental-"${{ steps.get-timestamp.outputs.time }} >> $GITHUB_OUTPUT
          echo "release_name=Source of Mana experimental build ${{ steps.get-timestamp.outputs.time }}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - run: gh release create ${{ steps.generate_env_vars.outputs.tag_name }} --prerelease --title "${{ steps.generate_env_vars.outputs.release_name }}" --target "$(git log -1 --format='%H')"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  builds:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Linux
          artifact: linux
          export_template: "Linux/X11"
          ext: "x86_64"
        - name: Linux (Headless Server)
          artifact: linux-server-headless
          export_template: "Linux/X11 Headless Server"
          ext: "x86_64"
        - name: Windows
          artifact: windows
          export_template: "Windows Desktop"
          ext: "exe"
        - name: macOS
          artifact: macos
          export_template: "macOS"
          ext: "zip"
        - name: Android
          artifact: android
          export_template: "Android"
          ext: "apk"
    runs-on: ubuntu-latest
    permissions: write-all
    container:
      image: barichello/godot-ci:4.3
    name: Export ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      # *_USER and *_PASSWORD have default values, they are not secret.
      # Also see https://github.com/abarichello/godot-ci/issues/151 about having to set these env vars.
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          printf '%s\n\n%s\n%s\n' "[gd_resource type="EditorSettings" format=3]" "[resource]" "$(cat /root/.config/godot/editor_settings-4.tres)" > /root/.config/godot/editor_settings-4.tres
          echo 'export/android/java_sdk_path = "/usr/lib/jvm/java-17-openjdk-amd64"' >> /root/.config/godot/editor_settings-4.tres
          cat /root/.config/godot/editor_settings-4.tres
          cp /root/.config/godot/editor_settings-4.tres /root/.config/godot/editor_settings-4.3.tres
          cp -r /root/.config/godot ~/.config/godot
          #echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_DEBUG_USER=androiddebugkey" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_DEBUG_PASSWORD=android" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_DEBUG_PATH=$HOME/debug_keystore" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_USER=androiddebugkey" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD=android" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PATH=$HOME/debug_keystore" >> $GITHUB_ENV
          echo "$DEBUG_KEYSTORE" | base64 -d > $HOME/debug_keystore
          echo "XDG_DATA_CONFIG: $XDG_DATA_CONFIG, XDG_DATA_HOME: $XDG_DATA_HOME"
          cp -r /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
        env:
          DEBUG_KEYSTORE: ${{ secrets.SECRET_RELEASE_KEYSTORE_BASE64 }}
      - name: ${{ matrix.name }} Build
        run: |
          mkdir -v -p "build/${{ matrix.artifact }}"
          cd "$PROJECT_PATH"
          godot --headless --verbose --export-debug "${{ matrix.export_template }}" "build/${{ matrix.artifact }}/${EXPORT_NAME}-${{ matrix.artifact }}-${{ needs.release.outputs.timestamp }}.${{ matrix.ext }}"
      - name: Ensure github cli is present
        run: |
          wget https://github.com/cli/cli/releases/download/v2.55.0/gh_2.55.0_linux_amd64.deb
          dpkg -i gh_2.55.0_linux_amd64.deb
      - name: Upload artifact to release
        run: |
          git config --global --add safe.directory '*'
          gh release upload som-experimental-${{ needs.release.outputs.timestamp }} "build/${{ matrix.artifact }}/${EXPORT_NAME}-${{ matrix.artifact }}-${{ needs.release.outputs.timestamp }}.${{ matrix.ext }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
